name: Build Signed AAB/APK from HTML

on:
  workflow_dispatch:
  push:
    paths:
      - 'web/**'
      - '.github/workflows/build.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APP_NAME: "HTML-to-AAP-Converter"   # keep ASCII to avoid shell quoting issues
      APP_ID: "com.html.aap.converter"
      VERSION_CODE: "1"
      VERSION_NAME: "1.0"
      MIN_SDK: "21"
      TARGET_SDK: "35"
      PERMISSIONS: "INTERNET,ACCESS_NETWORK_STATE"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android SDK cmdline-tools
        run: |
          ANDROID_SDK_ROOT=$HOME/android-sdk
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -sL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o /tmp/tools.zip
          unzip -q /tmp/tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses >/dev/null
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "platform-tools" "platforms;android-${TARGET_SDK}" "build-tools;${TARGET_SDK}.0.0"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/build-tools/${TARGET_SDK}.0.0" >> $GITHUB_PATH

      - name: Install Gradle (for wrapper generation)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gradle
          gradle -v

      - name: Generate minimal Android WebView project
        run: |
          set -e
          mkdir -p app-template/app/src/main/assets/www
          mkdir -p app-template/app/src/main/java/com/example/app
          mkdir -p app-template/app/src/main/res/layout
          mkdir -p app-template/app/src/main/res/values
          mkdir -p app-template/app/src/main/res/mipmap-anydpi-v26

                - name: Inject web assets (ensure index.html exists)
              - name: Inject web assets (ensure index.html exists)
        run: |
          set -e
          APP_DIR=app-template/app
          mkdir -p "$APP_DIR/src/main/assets/www"
          if [ -f web/index.html ]; then
            cp web/index.html "$APP_DIR/src/main/assets/www/index.html"
          else
            echo "<h1>${{ env.APP_NAME }}</h1><p>It works ðŸŽ‰</p>" > "$APP_DIR/src/main/assets/www/index.html"
          fi

      - name: Create Gradle wrapper
        working-directory: app-template
        run: |
          gradle wrapper
          chmod +x gradlew

      - name: Build release AAB + APK
        working-directory: app-template
        run: ./gradlew --no-daemon --stacktrace :app:bundleRelease :app:assembleRelease

      - name: List outputs (debug aid)
        run: |
          echo "::group::bundle/release"
          ls -lah app-template/app/build/outputs/bundle/release || true
          echo "::endgroup::"
          echo "::group::apk/release"
          ls -lah app-template/app/build/outputs/apk/release || true
          echo "::endgroup::"

      - name: Upload build artifacts (unsigned)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-build
          path: |
            app-template/app/build/outputs/bundle/release/*.aab
            app-template/app/build/outputs/apk/release/*.apk



          cat > app-template/settings.gradle <<'EOF'
          pluginManagement { repositories { google(); mavenCentral() } }
          dependencyResolutionManagement { repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS); repositories { google(); mavenCentral() } }
          rootProject.name = "WebAppShell"
          include(":app")
          EOF

          cat > app-template/app/build.gradle <<'EOF'
          plugins { id 'com.android.application' }
          android {
            namespace "com.example.app"
            compileSdk 35
            defaultConfig {
              applicationId "com.example.app"
              minSdk 21
              targetSdk 35
              versionCode 1
              versionName "1.0"
            }
            buildTypes {
              release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
              }
            }
          }
          dependencies {
            implementation 'androidx.appcompat:appcompat:1.7.0'
            implementation 'androidx.activity:activity:1.9.2'
            implementation 'androidx.webkit:webkit:1.10.0'
          }
          EOF

          : > app-template/app/proguard-rules.pro

          cat > app-template/app/src/main/AndroidManifest.xml <<'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <!--PERMISSIONS-->
            <application android:label="@string/app_name" android:icon="@mipmap/ic_launcher" android:allowBackup="true" android:supportsRtl="true">
              <activity android:name=".MainActivity" android:exported="true">
                <intent-filter>
                  <action android:name="android.intent.action.MAIN" />
                  <category android:name="android.intent.category.LAUNCHER" />
                </intent-filter>
              </activity>
            </application>
          </manifest>
          EOF

          cat > app-template/app/src/main/res/values/strings.xml <<'EOF'
          <resources><string name="app_name">Web App</string></resources>
          EOF

          cat > app-template/app/src/main/res/values/colors.xml <<'EOF'
          <resources><color name="ic_launcher_background">#FFFFFF</color></resources>
          EOF

          cat > app-template/app/src/main/res/layout/activity_main.xml <<'EOF'
          <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent" android:layout_height="match_parent">
            <WebView android:id="@+id/webview" android:layout_width="match_parent" android:layout_height="match_parent"/>
          </FrameLayout>
          EOF

          cat > app-template/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml <<'EOF'
          <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@color/ic_launcher_background"/>
            <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
          </adaptive-icon>
          EOF

          cat > app-template/app/src/main/res/mipmap-anydpi-v26/ic_launcher_foreground.xml <<'EOF'
          <vector xmlns:android="http://schemas.android.com/apk/res/android" android:width="108dp" android:height="108dp" android:viewportWidth="108" android:viewportHeight="108">
            <path android:fillColor="#4CAF50" android:pathData="M8,54a46,46 0 1,0 92,0a46,46 0 1,0 -92,0z"/>
            <path android:fillColor="#FFFFFF" android:pathData="M30,58h48v8H30z"/>
            <path android:fillColor="#FFFFFF" android:pathData="M54,34L70,74H38z"/>
          </vector>
          EOF

          cat > app-template/app/src/main/java/com/example/app/MainActivity.java <<'EOF'
          package com.example.app;
          import android.os.Bundle;
          import android.webkit.WebSettings;
          import android.webkit.WebView;
          import androidx.activity.ComponentActivity;
          public class MainActivity extends ComponentActivity {
            @Override protected void onCreate(Bundle savedInstanceState) {
              super.onCreate(savedInstanceState);
              WebView w = new WebView(this); setContentView(w);
              WebSettings s = w.getSettings(); s.setJavaScriptEnabled(true); s.setDomStorageEnabled(true);
              WebView.setWebContentsDebuggingEnabled(true);
              w.loadUrl("file:///android_asset/www/index.html");
            }
          }
          EOF
      - name: Upload signed artifacts
        uses: actions/upload-artifact@v4
        with:
          name: HTML-to-AAP-Converter-build
          path: |
            app-template/app/build/outputs/bundle/release/app-release.aab
            app-template/app/build/outputs/apk/release/app-release-unsigned.apk
