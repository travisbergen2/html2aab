name: Build Signed AAB/APK from HTML

on:
  workflow_dispatch:
  push:
    paths:
      - 'web/**'
      - '.github/workflows/build.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APP_NAME: "HTML-to-AAP-Converter"   # keep ASCII to avoid shell quoting issues
      APP_ID: "com.html.aap.converter"
      VERSION_CODE: "1"
      VERSION_NAME: "1.0"
      MIN_SDK: "21"
      TARGET_SDK: "35"
      PERMISSIONS: "INTERNET,ACCESS_NETWORK_STATE"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android SDK cmdline-tools
        run: |
          ANDROID_SDK_ROOT=$HOME/android-sdk
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -sL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o /tmp/tools.zip
          unzip -q /tmp/tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses >/dev/null
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "platform-tools" "platforms;android-${TARGET_SDK}" "build-tools;${TARGET_SDK}.0.0"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/build-tools/${TARGET_SDK}.0.0" >> $GITHUB_PATH

      - name: Install Gradle (for wrapper generation)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gradle
          gradle -v

      - name: Generate minimal Android WebView project
        run: |
          set -e
          mkdir -p app-template/app/src/main/assets/www
          mkdir -p app-template/app/src/main/java/com/example/app
          mkdir -p app-template/app/src/main/res/layout
          mkdir -p app-template/app/src/main/res/values
          mkdir -p app-template/app/src/main/res/mipmap-anydpi-v26

          cat > app-template/settings.gradle <<'EOF'
pluginManagement { repositories { google(); mavenCentral() } }
dependencyResolutionManagement { repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS); repositories { google(); mavenCentral() } }
rootProject.name = "WebAppShell"
include(":app")
EOF

          cat > app-template/app/build.gradle <<'EOF'
plugins { id 'com.android.application' }
android {
  namespace "com.example.app"
  compileSdk 35
  defaultConfig {
    applicationId "com.example.app"
    minSdk 21
    targetSdk 35
    versionCode 1
    versionName "1.0"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
}
dependencies {
  implementation 'androidx.appcompat:appcompat:1.7.0'
  implementation 'androidx.activity:activity:1.9.2'
  implementation 'androidx.webkit:webkit:1.10.0'
}
EOF

          : > app-template/app/proguard-rules.pro

          cat > app-template/app/src/main/AndroidManifest.xml <<'EOF'
<manifest xmlns:android="http://schemas.android.com/apk/res/android">
  <!--PERMISSIONS-->
  <application android:label="@string/app_name" android:icon="@mipmap/ic_launcher" android:allowBackup="true" android:supportsRtl="true">
    <activity android:name=".MainActivity" android:exported="true">
      <intent-filter>
        <action android:name="android.intent.action.MAIN" />
        <category android:name="android.intent.category.LAUNCHER" />
      </intent-filter>
    </activity>
  </application>
</manifest>
EOF

          cat > app-template/app/src/main/res/values/strings.xml <<'EOF'
<resources><string name="app_name">Web App</string></resources>
EOF

          cat > app-template/app/src/main/res/values/colors.xml <<'EOF'
<resources><color name="ic_launcher_background">#FFFFFF</color></resources>
EOF

          cat > app-template/ap
